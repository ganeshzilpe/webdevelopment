//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Homework5.weatherRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ForecastInformation", Namespace="http://schemas.datacontract.org/2004/07/WeatherForecasting")]
    [System.SerializableAttribute()]
    public partial class ForecastInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RainInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SnowInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StormInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TornadoInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] WindInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] maximumTempInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] minimumTempInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] RainInfo {
            get {
                return this.RainInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.RainInfoField, value) != true)) {
                    this.RainInfoField = value;
                    this.RaisePropertyChanged("RainInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SnowInfo {
            get {
                return this.SnowInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.SnowInfoField, value) != true)) {
                    this.SnowInfoField = value;
                    this.RaisePropertyChanged("SnowInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StormInfo {
            get {
                return this.StormInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.StormInfoField, value) != true)) {
                    this.StormInfoField = value;
                    this.RaisePropertyChanged("StormInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TornadoInfo {
            get {
                return this.TornadoInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.TornadoInfoField, value) != true)) {
                    this.TornadoInfoField = value;
                    this.RaisePropertyChanged("TornadoInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] WindInfo {
            get {
                return this.WindInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.WindInfoField, value) != true)) {
                    this.WindInfoField = value;
                    this.RaisePropertyChanged("WindInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] maximumTempInfo {
            get {
                return this.maximumTempInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.maximumTempInfoField, value) != true)) {
                    this.maximumTempInfoField = value;
                    this.RaisePropertyChanged("maximumTempInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] minimumTempInfo {
            get {
                return this.minimumTempInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.minimumTempInfoField, value) != true)) {
                    this.minimumTempInfoField = value;
                    this.RaisePropertyChanged("minimumTempInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="weatherRef.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWeatherForecast", ReplyAction="http://tempuri.org/IService1/getWeatherForecastResponse")]
        Homework5.weatherRef.ForecastInformation getWeatherForecast(string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWeatherForecast", ReplyAction="http://tempuri.org/IService1/getWeatherForecastResponse")]
        System.Threading.Tasks.Task<Homework5.weatherRef.ForecastInformation> getWeatherForecastAsync(string zipcode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Homework5.weatherRef.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Homework5.weatherRef.IService1>, Homework5.weatherRef.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Homework5.weatherRef.ForecastInformation getWeatherForecast(string zipcode) {
            return base.Channel.getWeatherForecast(zipcode);
        }
        
        public System.Threading.Tasks.Task<Homework5.weatherRef.ForecastInformation> getWeatherForecastAsync(string zipcode) {
            return base.Channel.getWeatherForecastAsync(zipcode);
        }
    }
}
